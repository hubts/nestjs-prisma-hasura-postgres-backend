// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [pgcrypto]
}

// Common models

model Cache {
    key       String   @id
    value     String
    ttl       Int
    expiredAt DateTime @db.Timestamptz
}

model ConsoleLog {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @db.Timestamptz
    message   String
    context   String
    level     String
    trace     String?
}

model ErrorLog {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @db.Timestamptz
    message   String
    context   String
    trace     String?
}

// Domain models

model User {
    id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz
    deletedAt DateTime? @db.Timestamptz
    email     String    @unique @db.VarChar
    password  String    @db.VarChar
    nickname  String    @unique @db.VarChar
    role      Role      @default(USER)
    Profile   Profile?
}

enum Role {
    USER
    ADMIN
}

model Profile {
    id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz
    deletedAt DateTime? @db.Timestamptz
    mobile    String    @unique @db.VarChar
    userId    String    @unique @db.Uuid
    user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}
