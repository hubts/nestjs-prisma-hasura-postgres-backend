type Mutation {
  joinUser(
    joinUserBodyDtoInput: JoinUserBodyDtoInput!
  ): JoinUserResponseDto
}

type Mutation {
  loginUser(
    loginUserBodyDtoInput: LoginUserBodyDtoInput!
  ): LoginUserResponseDto
}

type Mutation {
  updateMobile(
    updateMobileBodyDtoInput: UpdateMobileBodyDtoInput!
  ): UpdateMobileResponseDto
}

type Mutation {
  updatePassword(
    updatePasswordBodyDtoInput: UpdatePasswordBodyDtoInput!
  ): UpdatePasswordResponseDto
}

input UpdatePasswordBodyDtoInput {
  newPassword: String!
  originalPassword: String!
}

input UpdateMobileBodyDtoInput {
  mobile: String!
}

input JoinUserBodyDtoInput {
  email: String!
  mobile: String!
  nickname: String!
  password: String!
}

input LoginUserBodyDtoInput {
  email: String!
  password: String!
}

type UpdatePasswordResponseDto {
  code: Float!
  message: String!
  name: String!
  success: Boolean!
}

type UpdateMobileResponseDto {
  code: Float!
  message: String!
  name: String!
  success: Boolean!
}

type JoinUserResponseDto {
  code: Float!
  data: TokenData
  message: String!
  name: String!
  success: Boolean!
}

type TokenData {
  accessToken: String!
  refreshToken: String!
}

type LoginUserResponseDto {
  code: Float!
  data: TokenData
  message: String!
  name: String!
  success: Boolean!
}

