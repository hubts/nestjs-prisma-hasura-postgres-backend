{
    "name": "nestjs-prisma-hasura-postgres-backend",
    "version": "0.0.11",
    "description": "Full Backend in NestJS with Prisma, Hasura, and Postgres",
    "author": "hubts",
    "private": true,
    "license": "MIT",
    "main": "index.js",
    "repository": {
        "type": "git",
        "url": "https://github.com/hubts/nestjs-prisma-hasura-postgres-backend.git"
    },
    "scripts": {
        "prepare": "husky install",
        "prebuild": "rimraf dist",
        "build": "nest build",
        "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
        "start": "nest start",
        "start:dev": "nest start --watch",
        "start:debug": "nest start --debug --watch",
        "start:prod": "node dist/main",
        "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
        "test": "jest --passWithNoTests",
        "test:watch": "jest --watch",
        "test:cov": "jest --coverage",
        "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "git": "./script/skyrocket.sh",
        "deploy": "./script/run.sh",
        "hasura:export": "cd hasura && ./script/metadata-export.sh",
        "hasura:apply": "cd hasura && ./script/metadata-apply.sh",
        "prisma:sync": "prisma generate",
        "prisma:push": "prisma db push",
        "prisma:pull": "prisma db pull",
        "prisma:migrate": "prisma migrate dev --name",
        "prisma:migrate-create-only": "prisma migrate dev --create-only --name"
    },
    "dependencies": {
        "@nestjs/axios": "^3.0.0",
        "@nestjs/common": "^10.2.7",
        "@nestjs/config": "^3.1.1",
        "@nestjs/core": "^10.2.7",
        "@nestjs/cqrs": "^10.2.6",
        "@nestjs/jwt": "^10.2.0",
        "@nestjs/passport": "^10.0.3",
        "@nestjs/platform-express": "^10.2.7",
        "@nestjs/schedule": "^4.0.0",
        "@nestjs/swagger": "^7.3.1",
        "@nestjs/terminus": "^10.1.1",
        "@nestjs/throttler": "^5.0.1",
        "@prisma/client": "^5.14.0",
        "axios": "^1.5.1",
        "bcrypt": "^5.1.0",
        "body-parser": "^1.20.2",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.14.0",
        "compression": "^1.7.4",
        "helmet": "^7.0.0",
        "morgan": "^1.10.0",
        "passport": "^0.7.0",
        "passport-jwt": "^4.0.1",
        "reflect-metadata": "^0.1.13",
        "rimraf": "^3.0.2",
        "rxjs": "^7.2.0",
        "swagger-themes": "^1.4.3",
        "webpack": "^5.0.0"
    },
    "devDependencies": {
        "@nestjs/cli": "^9.0.0",
        "@nestjs/schematics": "^9.0.0",
        "@nestjs/testing": "^10.2.7",
        "@types/bcrypt": "^5.0.0",
        "@types/compression": "^1.7.4",
        "@types/express": "^4.17.13",
        "@types/jest": "28.1.8",
        "@types/morgan": "^1.9.3",
        "@types/node": "^16.0.0",
        "@types/passport-jwt": "^4.0.0",
        "@types/supertest": "^2.0.11",
        "@types/uuid": "^9.0.0",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "commitizen": "^4.2.6",
        "cz-emoji-conventional": "^1.0.1",
        "eslint": "^8.0.1",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-prettier": "^4.0.0",
        "husky": "^8.0.3",
        "jest": "28.1.3",
        "prettier": "^2.3.2",
        "prisma": "^5.14.0",
        "source-map-support": "^0.5.20",
        "supertest": "^6.1.3",
        "ts-jest": "28.0.8",
        "ts-loader": "^9.2.3",
        "ts-node": "^10.0.0",
        "tsconfig-paths": "4.1.0",
        "typescript": "^4.7.4"
    },
    "config": {
        "commitizen": {
            "path": "cz-emoji-conventional",
            "disableScopeLowerCase": true,
            "disableSubjectLowerCase": true
        }
    },
    "jest": {
        "moduleFileExtensions": [
            "js",
            "json",
            "ts"
        ],
        "rootDir": ".",
        "testRegex": ".*\\.spec\\.ts$",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "collectCoverageFrom": [
            "**/*.(t|j)s"
        ],
        "coverageDirectory": "../coverage",
        "testEnvironment": "node",
        "moduleNameMapper": {
            "^src/(.*)$": "<rootDir>/src/$1"
        }
    }
}
